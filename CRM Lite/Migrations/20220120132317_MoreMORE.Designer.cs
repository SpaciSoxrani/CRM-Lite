// <auto-generated />
using System;
using CRM_Lite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CRM_Lite.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220120132317_MoreMORE")]
    partial class MoreMORE
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CRM_Lite.Data.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("CanExecute")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanProduct")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanSell")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ManagerFromAD")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ManagerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ParentDepartmentId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.HasIndex("ParentDepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("CRM_Lite.Data.Models.PreSale.PreSale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ChangedByUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ChangedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("CreatedByUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DayAppointment")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExecutorContact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<string>("IncomingNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Organization")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("RegionId")
                        .HasColumnType("uuid");

                    b.Property<string>("RequestSent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ResponsibleUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("ResultComments")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ResultId")
                        .HasColumnType("uuid");

                    b.Property<string>("Site")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("StatusId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ChangedByUserId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("GroupId");

                    b.HasIndex("RegionId");

                    b.HasIndex("ResponsibleUserId");

                    b.HasIndex("ResultId");

                    b.HasIndex("StatusId");

                    b.ToTable("PreSales");
                });

            modelBuilder.Entity("CRM_Lite.Data.Models.PreSale.PreSaleGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ChangedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("StatusId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("StatusId");

                    b.ToTable("PreSaleGroups");
                });

            modelBuilder.Entity("CRM_Lite.Data.Models.PreSale.PreSaleGroupStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PreSaleGroupStatuses");
                });

            modelBuilder.Entity("CRM_Lite.Data.Models.PreSale.PreSaleRegion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PreSaleRegions");
                });

            modelBuilder.Entity("CRM_Lite.Data.Models.PreSale.PreSaleResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PreSaleResults");
                });

            modelBuilder.Entity("CRM_Lite.Data.Models.PreSale.PreSaleStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PreSaleStatuses");
                });

            modelBuilder.Entity("CRM_Lite.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CRM_Lite.Data.Models.Department", b =>
                {
                    b.HasOne("CRM_Lite.Data.Models.User", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.HasOne("CRM_Lite.Data.Models.Department", "ParentDepartment")
                        .WithMany("ChildDepartments")
                        .HasForeignKey("ParentDepartmentId");

                    b.Navigation("Manager");

                    b.Navigation("ParentDepartment");
                });

            modelBuilder.Entity("CRM_Lite.Data.Models.PreSale.PreSale", b =>
                {
                    b.HasOne("CRM_Lite.Data.Models.User", "ChangedByUser")
                        .WithMany()
                        .HasForeignKey("ChangedByUserId");

                    b.HasOne("CRM_Lite.Data.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");

                    b.HasOne("CRM_Lite.Data.Models.PreSale.PreSaleGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("CRM_Lite.Data.Models.PreSale.PreSaleRegion", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.HasOne("CRM_Lite.Data.Models.User", "ResponsibleUser")
                        .WithMany()
                        .HasForeignKey("ResponsibleUserId");

                    b.HasOne("CRM_Lite.Data.Models.PreSale.PreSaleResult", "Result")
                        .WithMany("PreSales")
                        .HasForeignKey("ResultId");

                    b.HasOne("CRM_Lite.Data.Models.PreSale.PreSaleStatus", "Status")
                        .WithMany("PreSales")
                        .HasForeignKey("StatusId");

                    b.Navigation("ChangedByUser");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Group");

                    b.Navigation("Region");

                    b.Navigation("ResponsibleUser");

                    b.Navigation("Result");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("CRM_Lite.Data.Models.PreSale.PreSaleGroup", b =>
                {
                    b.HasOne("CRM_Lite.Data.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("CRM_Lite.Data.Models.PreSale.PreSaleGroupStatus", "Status")
                        .WithMany("PreSaleGroups")
                        .HasForeignKey("StatusId");

                    b.Navigation("Department");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("CRM_Lite.Data.Models.User", b =>
                {
                    b.HasOne("CRM_Lite.Data.Models.Department", null)
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("CRM_Lite.Data.Models.Department", b =>
                {
                    b.Navigation("ChildDepartments");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CRM_Lite.Data.Models.PreSale.PreSaleGroupStatus", b =>
                {
                    b.Navigation("PreSaleGroups");
                });

            modelBuilder.Entity("CRM_Lite.Data.Models.PreSale.PreSaleResult", b =>
                {
                    b.Navigation("PreSales");
                });

            modelBuilder.Entity("CRM_Lite.Data.Models.PreSale.PreSaleStatus", b =>
                {
                    b.Navigation("PreSales");
                });
#pragma warning restore 612, 618
        }
    }
}
